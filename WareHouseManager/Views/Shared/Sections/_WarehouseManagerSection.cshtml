@model List<WareHouseManager.Models.User>
@{
    var activeTab = ViewData["ActiveTab"] as string ?? "warehouse-manager-tab";
    var displayStyle = activeTab == "warehouse-manager-tab" ? "block" : "none";
    var controllerName = "Admin";
    var addAction = "AddWarehouseManager";
    var updateAction = "UpdateWarehouseManager";
    var deleteAction = "DeleteWarehouseManager";
}

@* Warehouse Manager Section *@
<div id="warehouse-manager-tab" class="tab-content" style="display: @displayStyle;">
    <div class="title-bar" style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 16px;">
        <h3 style="margin: 0;">Warehouse Managers</h3>
        <button type="button" class="btn btn-success" style="height: 38px;" onclick="showAddWarehouseManagerPopup()">
            <i class="fas fa-plus"></i> Add Warehouse Manager
        </button>
    </div>
    <div class="search-bar" style="display: flex; align-items: center; gap: 10px; margin-bottom: 16px;">
        <input type="text" id="warehouseManagerSearch" placeholder="Search warehouse managers by name..." onkeyup="searchWarehouseManagers()" class="form-control" style="width: 300px;" />
        <button type="button" onclick="searchWarehouseManagers()" class="btn btn-primary" style="height: 38px;">Search</button>
    </div>
    <div class="flash-card-container" id="warehouseManagerContainer">
        @if (Model != null && Model.Count > 0)
        {
            foreach (var manager in Model)
            {
                <div class="flash-card" data-warehouse-manager-id="@manager.Id">
                    <div class="warehouse-manager-details">
                        <h4>@manager.Name</h4>
                        <p>Email: @manager.Email</p>
                        <p>Phone: @manager.Phone</p>
                        <p>Username: @manager.Username</p>
                    </div>
                    <div class="warehouse-manager-actions">
                        <button class="edit-button" type="button" onclick="openEditWarehouseManagerPopup(@manager.Id)">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <form method="post" asp-action="@deleteAction" asp-controller="@controllerName" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this warehouse manager?');">
                            <input type="hidden" name="id" value="@manager.Id" />
                            <button type="submit" class="delete-button">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </form>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No warehouse managers found.</p>
        }
    </div>
</div>

<div id="add-warehouse-manager-popup" class="popup" style="display: none;">
    <div class="popup-content">
        <h3>Add Warehouse Manager</h3>
        <form asp-antiforgery="true" method="post" asp-action="@addAction" asp-controller="@controllerName">
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label for="warehouseManagerName">Name</label>
                <input type="text" id="warehouseManagerName" name="Name" required maxlength="100" />
            </div>
            <div class="form-group">
                <label for="warehouseManagerEmail">Email</label>
                <input type="email" id="warehouseManagerEmail" name="Email" maxlength="100" />
            </div>
            <div class="form-group">
                <label for="warehouseManagerContact">Phone</label>
                <input type="text" id="warehouseManagerContact" name="Phone" maxlength="20" />
            </div>
            <div class="form-group">
                <label for="warehouseManagerUsername">Username</label>
                <input type="text" id="warehouseManagerUsername" name="Username" maxlength="50" />
            </div>
            <div class="form-group">
                <label for="warehouseManagerPassword">Password</label>
                <input type="password" id="warehouseManagerPassword" name="Password" maxlength="50" />
            </div>
            <input type="hidden" name="Role" value="Manager" />
            <button type="submit" class="submit-button">Submit</button>
            <button type="button" class="cancel-button" onclick="hideAddWarehouseManagerPopup()">Cancel</button>
        </form>
    </div>
</div>

<div id="edit-warehouse-manager-popup" class="popup" style="display: none;">
    <div class="popup-content">
        <h3>Edit Warehouse Manager</h3>
        <form asp-antiforgery="true" method="post" asp-action="@updateAction" asp-controller="@controllerName">
            @Html.AntiForgeryToken()
            <input type="hidden" id="editWarehouseManagerId" name="Id" />
            <div class="form-group">
                <label for="editWarehouseManagerName">Name</label>
                <input type="text" id="editWarehouseManagerName" name="Name" required maxlength="100" />
            </div>
            <div class="form-group">
                <label for="editWarehouseManagerEmail">Email</label>
                <input type="email" id="editWarehouseManagerEmail" name="Email" maxlength="100" />
            </div>
            <div class="form-group">
                <label for="editWarehouseManagerContact">Phone</label>
                <input type="text" id="editWarehouseManagerContact" name="Phone" maxlength="20" />
            </div>
            <div class="form-group">
                <label for="editWarehouseManagerUsername">Username</label>
                <input type="text" id="editWarehouseManagerUsername" name="Username" maxlength="50" />
            </div>
            <div class="form-group">
                <label for="editWarehouseManagerPassword">Password</label>
                <input type="password" id="editWarehouseManagerPassword" name="Password" maxlength="50" />
            </div>
            <input type="hidden" name="Role" value="Manager" />
            <button type="submit" class="submit-button">Save</button>
            <button type="button" class="cancel-button" onclick="hideEditWarehouseManagerPopup()">Cancel</button>
        </form>
    </div>
</div>

<script>
function showAddWarehouseManagerPopup() {
    document.getElementById('popup-overlay').style.display = 'block';
    document.getElementById('add-warehouse-manager-popup').style.display = 'block';
}
function hideAddWarehouseManagerPopup() {
    document.getElementById('popup-overlay').style.display = 'none';
    document.getElementById('add-warehouse-manager-popup').style.display = 'none';
}
function openEditWarehouseManagerPopup(managerId) {
    document.getElementById('popup-overlay').style.display = 'block';
    const card = document.querySelector(`.flash-card[data-warehouse-manager-id='${managerId}']`);
    if (!card) return;
    document.getElementById('editWarehouseManagerId').value = managerId;
    document.getElementById('editWarehouseManagerName').value = card.querySelector('.warehouse-manager-details h4').textContent;
    document.getElementById('editWarehouseManagerEmail').value = card.querySelector('.warehouse-manager-details p:nth-child(2)').textContent.split(': ')[1];
    document.getElementById('editWarehouseManagerContact').value = card.querySelector('.warehouse-manager-details p:nth-child(3)').textContent.split(': ')[1];
    document.getElementById('editWarehouseManagerUsername').value = card.querySelector('.warehouse-manager-details p:nth-child(4)').textContent.split(': ')[1];
    document.getElementById('editWarehouseManagerPassword').value = '';
    document.getElementById('edit-warehouse-manager-popup').style.display = 'block';
}
function hideEditWarehouseManagerPopup() {
    document.getElementById('popup-overlay').style.display = 'none';
    document.getElementById('edit-warehouse-manager-popup').style.display = 'none';
}
function searchWarehouseManagers() {
    var input = document.getElementById('warehouseManagerSearch').value.toLowerCase();
    var cards = document.querySelectorAll('#warehouseManagerContainer .flash-card');
    cards.forEach(function(card) {
        var name = card.querySelector('.warehouse-manager-details h4').textContent.toLowerCase();
        card.style.display = name.includes(input) ? '' : 'none';
    });
}

// --- Tab stay logic using ViewData/ViewBag ---
(function() {
    var activeTab = '@(ViewData["ActiveTab"] ?? "")';
    if (activeTab && typeof showTab === 'function') {
        window.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                showTab(activeTab);
            }, 0);
        });
    }
})();
</script>
